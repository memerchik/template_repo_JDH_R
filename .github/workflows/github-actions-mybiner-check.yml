name: "Test Binder build"

on:
  push:
    branches: [main, master]
  pull_request:

env:
  BINDERHUB_HOST: https://mybinder.org

jobs:
  binder-build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install HTTP client
        run: pip install --upgrade requests

      - name: Poll Binder build
        run: |
          python - << 'EOF'
          import os, time, sys, requests

          repo = os.getenv("GITHUB_REPOSITORY")
          # derive branch name: use GITHUB_REF (refs/heads/…) if REF_NAME is unset
          ref = os.getenv("GITHUB_REF_NAME") or os.getenv("GITHUB_REF", "").split("/")[-1]
          base = os.getenv("BINDERHUB_HOST").rstrip("/")
          url = f"{base}/build/gh/{repo}/{ref}"

          print("Polling Binder build at:", url)
          interval = 5               # seconds
          max_attempts = (30) 

          for i in range(1, max_attempts + 1):
              res = requests.get(url)
              res.raise_for_status()
              phase = res.json().get("phase", "").lower()
              print(f"[{i}/{max_attempts}] phase = {phase}")
              if phase == "ready":
                  print("✅ Binder build succeeded!")
                  sys.exit(0)
              if phase in ("failed", "error", "abort"):
                  print("❌ Binder build failed; logs at", res.json().get("build_logs_url"))
                  sys.exit(1)
              time.sleep(interval)

          print("⏰ Timed out waiting for Binder build after 10 minutes")
          sys.exit(1)
          EOF
